{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/oem/Documents/projects/ProjectIt/src/Login/Login.js\";\nimport React, { Component } from 'react';\nimport { Form, Button } from 'react-bootstrap';\n\nclass loginForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: '',\n      password: ''\n    };\n\n    this.changeFieldsHandler = name => event => {\n      let newState = { ...this.state\n      };\n      newState[name] = event.target.value;\n      this.setState(newState, () => {\n        console.log(this.state);\n      });\n    };\n\n    this.sendRequestHandler = async event => {\n      console.log(\"Entered!\");\n      event.preventDefault();\n      await fetch('http://localhost:5000/login?username=' + this.state.username + '&password=' + this.state.password, {\n        method: 'POST',\n        mode: 'cors'\n      }).then(response => {\n        var getUrl = window.location;\n        var baseUrl = getUrl.protocol + \"//\" + getUrl.host;\n\n        if (response.status == 200) {\n          window.location.href = baseUrl + '/';\n        } else {\n          window.location.href = baseUrl + '/login';\n        }\n      }); // .then(responseJson => {\n      //   console.log(responseJson);\n      // });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        action: \"\",\n        method: \"POST\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formBasicEmail\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            onChange: this.changeFieldsHandler(\"username\"),\n            type: \"username\",\n            placeholder: \"Enter username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formBasicPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            onChange: this.changeFieldsHandler(\"password\"),\n            type: \"password\",\n            placeholder: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.sendRequestHandler,\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default loginForm;","map":{"version":3,"sources":["/home/oem/Documents/projects/ProjectIt/src/Login/Login.js"],"names":["React","Component","Form","Button","loginForm","state","username","password","changeFieldsHandler","name","event","newState","target","value","setState","console","log","sendRequestHandler","preventDefault","fetch","method","mode","then","response","getUrl","window","location","baseUrl","protocol","host","status","href","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Form, Button } from 'react-bootstrap';\n\nclass loginForm extends Component {\n\n  state = {\n    username: '',\n    password: ''\n  }\n\n  changeFieldsHandler = (name) => (event) => {\n    let newState = {...this.state};\n\n    newState[name] = event.target.value;\n\n    this.setState(newState, () => {\n      console.log(this.state);\n    })\n  }\n\n  sendRequestHandler = async (event) => {\n    console.log(\"Entered!\");\n    event.preventDefault();\n    await fetch('http://localhost:5000/login?username=' + this.state.username + '&password=' + this.state.password, {\n      method: 'POST',\n      mode: 'cors',\n    }).then(response => {\n      var getUrl = window.location;\n      var baseUrl = getUrl.protocol + \"//\" + getUrl.host\n      if (response.status == 200){\n        window.location.href = baseUrl + '/'\n      }\n      else{\n        window.location.href = baseUrl + '/login'\n      }\n    })\n    // .then(responseJson => {\n    //   console.log(responseJson);\n    // });\n  }\n\n  render() {\n    return (\n      <div>\n        <Form action=\"\" method=\"POST\">\n          <Form.Group controlId=\"formBasicEmail\">\n            <Form.Label>Username</Form.Label>\n            <Form.Control onChange={this.changeFieldsHandler(\"username\")} type=\"username\" placeholder=\"Enter username\" />\n          </Form.Group>\n  \n          <Form.Group controlId=\"formBasicPassword\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control onChange={this.changeFieldsHandler(\"password\")} type=\"password\" placeholder=\"Password\" />\n          </Form.Group>\n          <Button onClick={this.sendRequestHandler} variant=\"primary\" type=\"submit\">\n            Submit\n          </Button>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default loginForm;"]},"metadata":{},"sourceType":"module"}
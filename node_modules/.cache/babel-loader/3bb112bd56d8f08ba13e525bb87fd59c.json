{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/oem/Documents/projects/ProjectIt/src/Login/Login.js\";\nimport React, { Component } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport axios from 'axios';\n\nclass loginForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.axiosConfig = {\n      withCredentials: true\n    };\n\n    this.loginUser = async event => {\n      event.preventDefault(); // try {\n\n      const res = await axios.post('http://localhost:5000/login?username=' + this.state.username + '&password=' + this.state.password, this.axiosConfig);\n      console.log(res); // console.log(res.data.cookie);\n      // document.cookie = \"cookiename=\" + res.data.cookie;\n\n      console.log(document.cookie);\n      return res; // } catch (error) {\n      //   console.log(error)\n      // }\n    };\n\n    this.state = {\n      username: '',\n      password: ''\n    };\n\n    this.changeFieldsHandler = name => event => {\n      let newState = { ...this.state\n      };\n      newState[name] = event.target.value;\n      this.setState(newState);\n    };\n\n    this.sendRequestHandler = async event => {\n      console.log(\"Entered!\");\n      event.preventDefault();\n      await fetch('http://localhost:5000/login?username=' + this.state.username + '&password=' + this.state.password, {\n        method: 'POST',\n        mode: 'cors'\n      }).then(response => response.json()).then(response => {\n        var getUrl = window.location;\n        var baseUrl = getUrl.protocol + \"//\" + getUrl.host;\n        console.log(response.data.cookie);\n        document.cookie = \"cookiename=\" + response.data.cookie; // if (response.status == 200){\n\n        console.log(response);\n        console.log(document.cookie); // window.location.href = baseUrl + '/'\n        // }\n        // else{\n        //   console.log(\"Abe password yaad rkha kr\")\n        //   // window.location.href = baseUrl + '/login'\n        // }\n      }); // .then(responseJson => {\n      //   console.log(responseJson);\n      // });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        action: \"\",\n        method: \"POST\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formBasicEmail\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            onChange: this.changeFieldsHandler(\"username\"),\n            type: \"username\",\n            placeholder: \"Enter username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formBasicPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            onChange: this.changeFieldsHandler(\"password\"),\n            type: \"password\",\n            placeholder: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.loginUser,\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"http://localhost:5000/check\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default loginForm;","map":{"version":3,"sources":["/home/oem/Documents/projects/ProjectIt/src/Login/Login.js"],"names":["React","Component","Form","Button","axios","loginForm","axiosConfig","withCredentials","loginUser","event","preventDefault","res","post","state","username","password","console","log","document","cookie","changeFieldsHandler","name","newState","target","value","setState","sendRequestHandler","fetch","method","mode","then","response","json","getUrl","window","location","baseUrl","protocol","host","data","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport axios from 'axios';\n\nclass loginForm extends Component {\n\n  axiosConfig = {\n    withCredentials: true,\n  }\n  loginUser = async (event) => {\n    event.preventDefault();\n    // try {\n      const res = await axios.post(\n        'http://localhost:5000/login?username=' + this.state.username + '&password=' + this.state.password,\n        this.axiosConfig\n      )\n      console.log(res);\n      // console.log(res.data.cookie);\n      // document.cookie = \"cookiename=\" + res.data.cookie;\n      console.log(document.cookie);\n      return res\n    // } catch (error) {\n    //   console.log(error)\n    // }\n  }\n\n  state = {\n    username: '',\n    password: ''\n  }\n\n  changeFieldsHandler = (name) => (event) => {\n    let newState = {...this.state};\n\n    newState[name] = event.target.value;\n\n    this.setState(newState)\n  }\n\n  sendRequestHandler = async (event) => {\n    console.log(\"Entered!\");\n    event.preventDefault();\n    await fetch('http://localhost:5000/login?username=' + this.state.username + '&password=' + this.state.password, {\n      method: 'POST',\n      mode: 'cors',\n    }).then(response => response.json())\n    .then(response => {\n      var getUrl = window.location;\n      var baseUrl = getUrl.protocol + \"//\" + getUrl.host\n      console.log(response.data.cookie);\n      document.cookie = \"cookiename=\" + response.data.cookie;\n      // if (response.status == 200){\n        console.log(response)\n        console.log(document.cookie)\n        // window.location.href = baseUrl + '/'\n      // }\n      // else{\n      //   console.log(\"Abe password yaad rkha kr\")\n      //   // window.location.href = baseUrl + '/login'\n      // }\n    })\n    // .then(responseJson => {\n    //   console.log(responseJson);\n    // });\n  }\n\n  render() {\n    return (\n      <div>\n        <Form action=\"\" method=\"POST\">\n          <Form.Group controlId=\"formBasicEmail\">\n            <Form.Label>Username</Form.Label>\n            <Form.Control onChange={this.changeFieldsHandler(\"username\")} type=\"username\" placeholder=\"Enter username\" />\n          </Form.Group>\n  \n          <Form.Group controlId=\"formBasicPassword\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control onChange={this.changeFieldsHandler(\"password\")} type=\"password\" placeholder=\"Password\" />\n          </Form.Group>\n          <Button onClick={this.loginUser} variant=\"primary\" type=\"submit\">\n            Submit\n          </Button>\n          <a href=\"http://localhost:5000/check\" />\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default loginForm;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/oem/Documents/projects/ProjectIt/src/Login/Login.js\";\nimport React, { Component } from \"react\";\nimport { Form, Button, Container, Alert } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport Navbar from \"../Common/Navbar\";\nimport \"./Login.css\";\n\nclass loginForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userDetails: {\n        username: \"\",\n        password: \"\"\n      },\n      validated: false,\n      wrongEntries: false\n    };\n    this.axiosConfig = {\n      withCredentials: true\n    };\n\n    this.loginUser = async event => {\n      event.preventDefault();\n      const form = event.currentTarget;\n\n      if (form.checkValidity() === false) {\n        event.preventDefault();\n        return;\n      } else {\n        let newState = { ...this.state\n        };\n        newState.validated = true;\n        this.setState(newState);\n        await axios.post(\"http://localhost:5000/login?username=\" + this.state.userDetails.username + \"&password=\" + this.state.userDetails.password, this.axiosConfig).then(res => {\n          var getUrl = window.location;\n          var baseUrl = getUrl.protocol + \"//\" + getUrl.host;\n\n          if (res.status === 200) {\n            document.cookie = \"sessionCookie=\" + res.data.cookie;\n            console.log(document.cookie);\n            window.location.href = baseUrl + \"/\";\n          } else {\n            console.log(\"wrong entry\");\n            window.location.href = baseUrl + \"/login\";\n          }\n        }).catch(() => {\n          // var getUrl = window.location;\n          // var baseUrl = getUrl.protocol + \"//\" + getUrl.host;\n          // window.location.href = baseUrl + \"/login\";\n          let newState = { ...this.state\n          };\n          newState.wrongEntries = true;\n          this.setState(newState);\n        });\n      }\n    };\n\n    this.changeFieldsHandler = name => event => {\n      let newState = { ...this.state\n      };\n      newState.userDetails[name] = event.target.value;\n      this.setState(newState);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-page\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), this.state.wrongEntries && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"danger\",\n        children: \"Invalid Username and Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"loginHead\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: this.loginUser,\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formBasicEmail\",\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                required: true,\n                onChange: this.changeFieldsHandler(\"username\"),\n                type: \"username\",\n                placeholder: \"Username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formBasicPassword\",\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                required: true,\n                onChange: this.changeFieldsHandler(\"password\"),\n                type: \"password\",\n                placeholder: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: \"buttonGradient\",\n              variant: \"outline-dark\",\n              type: \"submit\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"/signup\",\n              children: \"Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 38\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default loginForm;","map":{"version":3,"sources":["/home/oem/Documents/projects/ProjectIt/src/Login/Login.js"],"names":["React","Component","Form","Button","Container","Alert","axios","Navbar","loginForm","state","userDetails","username","password","validated","wrongEntries","axiosConfig","withCredentials","loginUser","event","preventDefault","form","currentTarget","checkValidity","newState","setState","post","then","res","getUrl","window","location","baseUrl","protocol","host","status","document","cookie","data","console","log","href","catch","changeFieldsHandler","name","target","value","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Form, Button, Container, Alert } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport Navbar from \"../Common/Navbar\";\nimport \"./Login.css\";\n\nclass loginForm extends Component {\n  state = {\n    userDetails: {\n      username: \"\",\n      password: \"\",\n    },\n    validated: false,\n    wrongEntries: false,\n  };\n\n  axiosConfig = {\n    withCredentials: true,\n  };\n  loginUser = async (event) => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      return;\n    } else {\n      let newState = { ...this.state };\n      newState.validated = true;\n      this.setState(newState);\n      await axios\n        .post(\n          \"http://localhost:5000/login?username=\" +\n            this.state.userDetails.username +\n            \"&password=\" +\n            this.state.userDetails.password,\n          this.axiosConfig\n        )\n        .then((res) => {\n          var getUrl = window.location;\n          var baseUrl = getUrl.protocol + \"//\" + getUrl.host;\n          if (res.status === 200) {\n            document.cookie = \"sessionCookie=\" + res.data.cookie;\n            console.log(document.cookie);\n            window.location.href = baseUrl + \"/\";\n          } else {\n            console.log(\"wrong entry\");\n            window.location.href = baseUrl + \"/login\";\n          }\n        })\n        .catch(() => {\n          // var getUrl = window.location;\n          // var baseUrl = getUrl.protocol + \"//\" + getUrl.host;\n          // window.location.href = baseUrl + \"/login\";\n          let newState = { ...this.state };\n          newState.wrongEntries = true;\n          this.setState(newState);\n        });\n    }\n  };\n\n  changeFieldsHandler = (name) => (event) => {\n    let newState = { ...this.state };\n    newState.userDetails[name] = event.target.value;\n    this.setState(newState);\n  };\n\n  render() {\n    return (\n      <div className=\"form-page\">\n        <Navbar />\n        {this.state.wrongEntries && \n          (<Alert variant=\"danger\">\n            Invalid Username and Password\n          </Alert>)\n        }\n        <Container className=\"container\">\n          <div className=\"form-container\">\n            <h2 className=\"loginHead\">Login</h2>\n            <Form onSubmit={this.loginUser}>\n              <Form.Group controlId=\"formBasicEmail\">\n                <Form.Control\n                  required\n                  onChange={this.changeFieldsHandler(\"username\")}\n                  type=\"username\"\n                  placeholder=\"Username\"\n                />\n              </Form.Group>\n\n              <Form.Group controlId=\"formBasicPassword\">\n                <Form.Control\n                  required\n                  onChange={this.changeFieldsHandler(\"password\")}\n                  type=\"password\"\n                  placeholder=\"Password\"\n                />\n              </Form.Group>\n              <Button\n                className=\"buttonGradient\"\n                variant=\"outline-dark\"\n                type=\"submit\"\n              >\n                Login\n              </Button>\n            </Form>\n            <p>\n              Don't have an account? <a href=\"/signup\">Sign Up</a>\n            </p>\n          </div>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default loginForm;\n"]},"metadata":{},"sourceType":"module"}
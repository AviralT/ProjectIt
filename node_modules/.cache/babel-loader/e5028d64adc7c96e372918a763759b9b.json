{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/oem/Documents/projects/Hack2021/ProjectIt/src/Signup/Signup.js\";\nimport React, { Component } from \"react\";\nimport { Form, Button, Container } from \"react-bootstrap\";\nimport \"./Signup.css\";\nimport Navbar from \"../Common/Navbar\";\n\nclass signupForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userDetails: {\n        name: \"\",\n        username: \"\",\n        email: \"\",\n        password: \"\",\n        linkedIn: \"\",\n        codeforces: \"\",\n        github: \"\"\n      },\n      validated: false,\n      usernameValid: false,\n      formValid: false\n    };\n\n    this.changeFieldsHandler = name => event => {\n      let newState = { ...this.state\n      };\n      newState.userDetails[name] = event.target.value;\n      this.setState(newState);\n    };\n\n    this.checkUser = async () => {\n      let userToCheck = this.state.userDetails.username;\n      await fetch(\"http://localhost:5000/checkUsername?username=\" + userToCheck, {\n        method: \"GET\",\n        mode: \"cors\"\n      }).then(response => response.json()).then(response => {\n        console.log(response.userExist);\n        console.log(\"Ye hmara type h \" + typeof response.userExist);\n\n        if (response.userExist == false) {\n          console.log(\"User not exist!\");\n          let newState = { ...this.state\n          };\n          newState.usernameValid = true;\n          newState.formValid = true;\n          this.setState(newState);\n          console.log(this.state.usernameValid);\n          console.log(typeof this.state.usernameValid);\n        } else {\n          console.log(\"Ye hmara else h\");\n          let newState = { ...this.state\n          };\n          newState.usernameValid = false;\n          this.setState(newState);\n        }\n      });\n    };\n\n    this.sendRequestHandler = async event => {\n      event.preventDefault();\n      const form = event.currentTarget;\n\n      if (form.checkValidity() === false) {\n        event.preventDefault();\n        return;\n      }\n\n      let newState = { ...this.state\n      };\n      newState.validated = true;\n      this.setState(newState);\n      let url = \"http://localhost:5000/signup?\";\n      url = url + \"name=\" + this.state.userDetails.name;\n      url = url + \"&username=\" + this.state.userDetails.username;\n      url = url + \"&email=\" + this.state.userDetails.email;\n      url = url + \"&password=\" + this.state.userDetails.password;\n      url = url + \"&linkedIn=\" + this.state.userDetails.linkedIn;\n      url = url + \"&codeforces=\" + this.state.userDetails.codeforces;\n      url = url + \"&github=\" + this.state.userDetails.github;\n      await fetch(url, {\n        method: \"POST\",\n        mode: \"cors\"\n      }).then(response => response.json()).then(responseJson => {\n        var getUrl = window.location;\n        var baseUrl = getUrl.protocol + \"//\" + getUrl.host;\n        window.location.href = baseUrl + \"/login\";\n      });\n    };\n\n    this.styling = {\n      border: \"0\",\n      borderBottom: \"2px solid #c4b6b6\",\n      borderRadius: \"0\",\n      width: \"670px\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: \"#dfeae9\",\n        minHeight: \"100vh\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"signbox\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"loginHead\",\n            children: \"Create Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: this.sendRequestHandler,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"name-user\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"formBasicName\",\n                children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                  required: true,\n                  style: { ...this.styling,\n                    width: \"300px\",\n                    marginRight: \"70px\"\n                  },\n                  onChange: this.changeFieldsHandler(\"name\"),\n                  type: \"text\",\n                  placeholder: \"Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"formBasicUsername\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                  required: true,\n                  style: { ...this.styling,\n                    borderRadius: \"0\",\n                    width: \"300px\"\n                  },\n                  onChange: this.changeFieldsHandler(\"username\"),\n                  onBlur: this.checkUser,\n                  type: \"text\",\n                  placeholder: \"User Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 19\n                }, this), this.state.userDetails.username && this.state.usernameValid && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-success\",\n                  children: \"Valid Username\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 21\n                }, this), this.state.userDetails.username && !this.state.usernameValid && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-danger\",\n                  children: \"Username Already Taken\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formBasicEmail\",\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                required: true,\n                style: this.styling,\n                onChange: this.changeFieldsHandler(\"email\"),\n                type: \"email\",\n                placeholder: \"Enter email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formBasicPassword\",\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                required: true,\n                style: this.styling,\n                onChange: this.changeFieldsHandler(\"password\"),\n                type: \"password\",\n                placeholder: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formBasicLinked\",\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                style: this.styling,\n                onChange: this.changeFieldsHandler(\"linkedIn\"),\n                type: \"text\",\n                placeholder: \"LinkedIn Profile\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formBasicCodeforces\",\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                style: this.styling,\n                onChange: this.changeFieldsHandler(\"codeforces\"),\n                type: \"text\",\n                placeholder: \"Codeforces Id\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formBasicGit\",\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                style: this.styling,\n                onChange: this.changeFieldsHandler(\"github\"),\n                type: \"text\",\n                placeholder: \"GitHub Profile\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: \"buttonGradient\",\n              variant: \"outline-dark\",\n              type: \"submit\",\n              disabled: !this.state.formValid,\n              children: \"Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"/login\",\n              children: \"Login Here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 40\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default signupForm;","map":{"version":3,"sources":["/home/oem/Documents/projects/Hack2021/ProjectIt/src/Signup/Signup.js"],"names":["React","Component","Form","Button","Container","Navbar","signupForm","state","userDetails","name","username","email","password","linkedIn","codeforces","github","validated","usernameValid","formValid","changeFieldsHandler","event","newState","target","value","setState","checkUser","userToCheck","fetch","method","mode","then","response","json","console","log","userExist","sendRequestHandler","preventDefault","form","currentTarget","checkValidity","url","responseJson","getUrl","window","location","baseUrl","protocol","host","href","styling","border","borderBottom","borderRadius","width","render","backgroundColor","minHeight","marginRight"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Form, Button, Container } from \"react-bootstrap\";\nimport \"./Signup.css\";\nimport Navbar from \"../Common/Navbar\";\n\nclass signupForm extends Component {\n  state = {\n    userDetails: {\n      name: \"\",\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      linkedIn: \"\",\n      codeforces: \"\",\n      github: \"\",\n    },\n    validated: false,\n    usernameValid: false,\n    formValid: false\n  };\n\n  changeFieldsHandler = (name) => (event) => {\n    let newState = { ...this.state };\n    newState.userDetails[name] = event.target.value;\n    this.setState(newState);\n  };\n\n  checkUser = async () => {\n    let userToCheck = this.state.userDetails.username;\n    await fetch(\"http://localhost:5000/checkUsername?username=\" + userToCheck, {\n      method: \"GET\",\n      mode: \"cors\"\n    }).then((response) => response.json())\n    .then((response) => {\n      console.log(response.userExist)\n      console.log(\"Ye hmara type h \" + typeof(response.userExist))\n      if(response.userExist == false){\n        console.log(\"User not exist!\")\n        let newState = { ...this.state };\n        newState.usernameValid = true;\n        newState.formValid = true;\n        this.setState(newState);\n        console.log(this.state.usernameValid)\n        console.log(typeof(this.state.usernameValid))\n      }\n      else{\n        console.log(\"Ye hmara else h\")\n        let newState = { ...this.state };\n        newState.usernameValid = false;\n        this.setState(newState);\n      }\n    })\n  }\n\n  sendRequestHandler = async (event) => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      return;\n    }\n    let newState = {...this.state};\n    newState.validated = true;\n    this.setState(newState);\n    let url = \"http://localhost:5000/signup?\";\n    url = url + \"name=\" + this.state.userDetails.name;\n    url = url + \"&username=\" + this.state.userDetails.username;\n    url = url + \"&email=\" + this.state.userDetails.email;\n    url = url + \"&password=\" + this.state.userDetails.password;\n    url = url + \"&linkedIn=\" + this.state.userDetails.linkedIn;\n    url = url + \"&codeforces=\" + this.state.userDetails.codeforces;\n    url = url + \"&github=\" + this.state.userDetails.github;\n    await fetch(url, {\n      method: \"POST\",\n      mode: \"cors\",\n    })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        var getUrl = window.location;\n        var baseUrl = getUrl.protocol + \"//\" + getUrl.host;\n        window.location.href = baseUrl + \"/login\";\n      });\n  };\n\n  styling = {\n    border: \"0\",\n    borderBottom: \"2px solid #c4b6b6\",\n    borderRadius: \"0\",\n    width: \"670px\",\n  };\n\n  render() {\n    return (\n      <div style={{ backgroundColor: \"#dfeae9\", minHeight: \"100vh\" }}>\n        <Navbar />\n        <Container className=\"container\">\n          <div className=\"signbox\">\n            <h2 className=\"loginHead\">Create Account</h2>\n            <Form onSubmit={this.sendRequestHandler}>\n              <div className=\"name-user\">\n                <Form.Group controlId=\"formBasicName\">\n                  <Form.Control\n                    required\n                    style={{\n                      ...this.styling,\n                      width: \"300px\",\n                      marginRight: \"70px\",\n                    }}\n                    onChange={this.changeFieldsHandler(\"name\")}\n                    type=\"text\"\n                    placeholder=\"Name\"\n                  />\n                </Form.Group>\n                <Form.Group controlId=\"formBasicUsername\">\n                  <Form.Control\n                    required\n                    style={{\n                      ...this.styling,\n                      borderRadius: \"0\",\n                      width: \"300px\",\n                    }}\n                    onChange={this.changeFieldsHandler(\"username\")}\n                    onBlur={this.checkUser}\n                    type=\"text\"\n                    placeholder=\"User Name\"\n                  />\n                  {this.state.userDetails.username && this.state.usernameValid && (\n                    <p className=\"text-success\">Valid Username</p>\n                  )}\n                  {this.state.userDetails.username && !this.state.usernameValid && (\n                    <p className=\"text-danger\">Username Already Taken</p>\n                  )}\n                  </Form.Group>\n              </div>\n              <Form.Group controlId=\"formBasicEmail\">\n                <Form.Control\n                  required\n                  style={this.styling}\n                  onChange={this.changeFieldsHandler(\"email\")}\n                  type=\"email\"\n                  placeholder=\"Enter email\"\n                />\n              </Form.Group>\n              <Form.Group controlId=\"formBasicPassword\">\n                <Form.Control\n                  required\n                  style={this.styling}\n                  onChange={this.changeFieldsHandler(\"password\")}\n                  type=\"password\"\n                  placeholder=\"Password\"\n                />\n              </Form.Group>\n              <Form.Group controlId=\"formBasicLinked\">\n                <Form.Control\n                  style={this.styling}\n                  onChange={this.changeFieldsHandler(\"linkedIn\")}\n                  type=\"text\"\n                  placeholder=\"LinkedIn Profile\"\n                />\n              </Form.Group>\n              <Form.Group controlId=\"formBasicCodeforces\">\n                <Form.Control\n                  style={this.styling}\n                  onChange={this.changeFieldsHandler(\"codeforces\")}\n                  type=\"text\"\n                  placeholder=\"Codeforces Id\"\n                />\n              </Form.Group>\n              <Form.Group controlId=\"formBasicGit\">\n                <Form.Control\n                  style={this.styling}\n                  onChange={this.changeFieldsHandler(\"github\")}\n                  type=\"text\"\n                  placeholder=\"GitHub Profile\"\n                />\n              </Form.Group>\n              <Button\n                className=\"buttonGradient\"\n                variant=\"outline-dark\"\n                type=\"submit\"\n                disabled={!this.state.formValid}\n              >\n                Sign Up\n              </Button>\n            </Form>\n            <p>\n              Already have an account? <a href=\"/login\">Login Here</a>\n            </p>\n          </div>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default signupForm;\n"]},"metadata":{},"sourceType":"module"}